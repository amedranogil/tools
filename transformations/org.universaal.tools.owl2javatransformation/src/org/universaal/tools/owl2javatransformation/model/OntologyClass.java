package org.universaal.tools.owl2javatransformation.model;

import java.util.Set;

import com.google.common.collect.ImmutableSet;

/**
 * represents internal structure of an ontology/schema class. It is used in
 * representations of the openAAL ontology as generated by the OntolgyModel in
 * the OntolgyCreator. 
 * 
 * Objects of this class are immutable and it uses defensive copying to enforce it.
 * Returned objects, including the sets, are immutable.
 * 
 * @author wolf
 * 
 */
public final class OntologyClass extends OntologyEntity {
	
	private final Set<OntologyProperty> declaredProps;
	private final String superClassName;
	private final Set<String> importedPackages;
	private final String packageName;
	private final Set<PropertyRestriction> propertyRestrictions;


	public OntologyClass(String simpleName, String uri, String comment, 
			Set<OntologyProperty> declaredProps, String superClassName, 
			Set<String> importedPackages, String packageName, Set<PropertyRestriction> propertyRestrictions) {
		super(simpleName, uri, comment);
		this.declaredProps = ImmutableSet.copyOf(declaredProps);
		this.superClassName = superClassName;
		this.importedPackages = ImmutableSet.copyOf(importedPackages);
		this.packageName = packageName;
		this.propertyRestrictions = ImmutableSet.copyOf(propertyRestrictions);
	}

	public Set<OntologyProperty> getDeclaredProps() {
		return declaredProps;
	}

	public String getSuperClassName() {
		return superClassName;
	}

	public Set<String> getImportedPackages() {
		return importedPackages;
	}

	public String getPackageName() {
		return packageName;
	}
	
	public boolean hasDeclaredProps() {
		return !declaredProps.isEmpty();
	}
	
	public boolean hasRestrictions() {
		return !this.propertyRestrictions.isEmpty();
	}

	public Set<PropertyRestriction> getPropertyRestrictions() {
		return propertyRestrictions;
	}
	

}
